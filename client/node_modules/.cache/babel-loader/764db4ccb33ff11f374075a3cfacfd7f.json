{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wt\\\\Desktop\\\\Employee-MS\\\\client\\\\src\\\\Components\\\\Assets\\\\Employee\\\\Project\\\\ProjectTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Axios from 'axios';\nimport Loader from '../../Loader';\nimport Heading from '../../Heading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: '#003049',\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14,\n    backgroundColor: theme.palette.common.white,\n    maxWidth: '80px'\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\nconst useStyles = makeStyles({\n  parentDiv: {\n    display: 'flex',\n    flex: 1,\n    width: '100%',\n    flexDirection: 'column'\n  },\n  upperChild: {\n    display: 'flex',\n    flex: 0.1,\n    width: '100%',\n    flexDirection: 'column'\n  },\n  lowerChild: {\n    display: 'flex',\n    flex: 0.9,\n    width: '100%'\n  },\n  statusColorRed: {\n    color: 'red',\n    fontWeight: 'bold'\n  },\n  statusColorGreen: {\n    color: 'green',\n    fontWeight: 'bold'\n  }\n});\nexport default function CustomizedTables() {\n  _s();\n\n  const classes = useStyles();\n  const [projects, setProjects] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    getProjects();\n  }, []);\n\n  const getProjects = () => {\n    Axios.get('http://localhost:5000/employee/viewProjectHistory', {\n      headers: {\n        'x-access-token': localStorage.getItem('x-access-token')\n      }\n    }).then(res => {\n      console.log(res.data);\n      const getProjects = res.data;\n      setIsLoaded(true);\n      setProjects(getProjects);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.parentDiv,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.upperChild,\n      children: /*#__PURE__*/_jsxDEV(Heading, {\n        text: \"Projects History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.lowerChild,\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: isLoaded === false ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 47\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          \"aria-label\": \"customized table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                children: \"Project Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: \"Assigning Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: \"Submission Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 33\n          }, this), projects.length > 0 ? /*#__PURE__*/_jsxDEV(TableBody, {\n            children: projects.map(projects => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n              children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: projects.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: projects.startDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                children: projects.endDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 49\n              }, this), projects.status === 'Pending' ? /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                className: classes.statusColorRed,\n                children: projects.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 58\n              }, this) : /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                align: \"center\",\n                className: classes.statusColorGreen,\n                children: projects.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 58\n              }, this)]\n            }, projects.description, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 38\n          }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"No Projects Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CustomizedTables, \"0d+DVXR1zhfP4PCuY7Q1F9KmLLY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CustomizedTables;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomizedTables\");","map":{"version":3,"sources":["C:/Users/wt/Desktop/Employee-MS/client/src/Components/Assets/Employee/Project/ProjectTable.js"],"names":["React","useEffect","useState","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Axios","Loader","Heading","StyledTableCell","theme","head","backgroundColor","color","palette","common","white","body","fontSize","maxWidth","StyledTableRow","root","action","hover","useStyles","parentDiv","display","flex","width","flexDirection","upperChild","lowerChild","statusColorRed","fontWeight","statusColorGreen","CustomizedTables","classes","projects","setProjects","isLoaded","setIsLoaded","getProjects","get","headers","localStorage","getItem","then","res","console","log","data","catch","error","length","map","description","startDate","endDate","status"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Axios from 'axios';\r\nimport Loader from '../../Loader';\r\nimport Heading from '../../Heading';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: '#003049',\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n        backgroundColor: theme.palette.common.white,\r\n        maxWidth: '80px',\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n    parentDiv: {\r\n        display: 'flex',\r\n        flex: 1,\r\n        width: '100%',\r\n        flexDirection: 'column',\r\n    },\r\n    upperChild: {\r\n        display: 'flex',\r\n        flex: 0.1,\r\n        width: '100%',\r\n        flexDirection: 'column',\r\n    },\r\n    lowerChild: {\r\n        display: 'flex',\r\n        flex: 0.9,\r\n        width: '100%',\r\n    },\r\n    statusColorRed: {\r\n        color: 'red',\r\n        fontWeight: 'bold',\r\n    },\r\n    statusColorGreen: {\r\n        color: 'green',\r\n        fontWeight: 'bold',\r\n    }\r\n});\r\n\r\nexport default function CustomizedTables() {\r\n    const classes = useStyles();\r\n    const [projects, setProjects] = useState([]);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getProjects();\r\n    }, []);\r\n\r\n    const getProjects = () => {\r\n        Axios.get('http://localhost:5000/employee/viewProjectHistory', {\r\n            headers: {\r\n                'x-access-token': localStorage.getItem('x-access-token')\r\n            }\r\n        })\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                const getProjects = res.data;\r\n                setIsLoaded(true);\r\n                setProjects(getProjects);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.parentDiv}>\r\n            <div className={classes.upperChild}>\r\n                <Heading text='Projects History' />\r\n            </div>\r\n            <div className={classes.lowerChild}>\r\n                <TableContainer component={Paper}>\r\n                    {\r\n                        isLoaded === false ? (<Loader />) : (\r\n                            <Table aria-label=\"customized table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <StyledTableCell>Project Description</StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">Assigning Date</StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">Submission Date</StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">Status</StyledTableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                {projects.length > 0 ?\r\n                                    (<TableBody>\r\n                                        {projects.map((projects) => (\r\n                                            <StyledTableRow key={projects.description}>\r\n                                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                                    {projects.description}\r\n                                                </StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{projects.startDate}</StyledTableCell>\r\n                                                <StyledTableCell align=\"center\">{projects.endDate}</StyledTableCell>\r\n                                                {\r\n                                                    projects.status === 'Pending' ?\r\n                                                        (<StyledTableCell align=\"center\" className={classes.statusColorRed}>{projects.status}</StyledTableCell>) :\r\n                                                        (<StyledTableCell align=\"center\" className={classes.statusColorGreen}>{projects.status}</StyledTableCell>)\r\n                                                }\r\n\r\n                                            </StyledTableRow>\r\n                                        ))}\r\n                                    </TableBody>) :\r\n                                    (<h2>No Projects Found</h2>)\r\n                                }\r\n                            </Table>\r\n                        )\r\n                    }\r\n                </TableContainer>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}