{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wt\\\\Desktop\\\\Employee-MS\\\\client\\\\src\\\\Components\\\\Assets\\\\Employee\\\\Project\\\\PendingProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Axios from 'axios';\nimport { Card, CardActionArea, CardActions, CardContent, Button, Typography, Snackbar } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport Loader from '../../Loader';\nimport Heading from '../../Heading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  parentDiv: {\n    display: 'flex',\n    flex: 1,\n    width: '100%',\n    flexDirection: 'column'\n  },\n  upperChild: {\n    display: 'flex',\n    flex: 0.1,\n    width: '100%',\n    flexDirection: 'column'\n  },\n  lowerChild: {\n    display: 'flex',\n    flex: 0.9,\n    width: '100%'\n  },\n  root: {\n    margin: '20px',\n    width: 345,\n    height: 220,\n    maxWidth: 345\n  },\n  cardAction: {\n    justifyContent: 'flex-end'\n  }\n});\nexport default function MediaCard() {\n  _s();\n\n  const classes = useStyles();\n  const [pendingProjects, setPendingProjects] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setIsSubmitted(false);\n  };\n\n  useEffect(() => {\n    getPendingProjects();\n  }, []);\n\n  const getPendingProjects = () => {\n    Axios.get('http://localhost:5000/employee/viewProjects', {\n      headers: {\n        'x-access-token': localStorage.getItem('x-access-token')\n      }\n    }).then(res => {\n      console.log(res.data);\n      const getPendingProjects = res.data;\n      setPendingProjects(getPendingProjects);\n      setIsLoaded(true);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleClick = id => {\n    Axios.post(`http://localhost:5000/employee/submitProject/${id}`, null, {\n      headers: {\n        'x-access-token': localStorage.getItem('x-access-token')\n      }\n    }).then(res => {\n      console.log(res.data);\n      setIsSubmitted(true);\n      getPendingProjects();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.parentDiv,\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      },\n      open: isSubmitted,\n      autoHideDuration: 3000,\n      onClose: handleSnackbarClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleSnackbarClose,\n        severity: \"success\",\n        children: \"Project Submitted Successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.upperChild,\n      children: /*#__PURE__*/_jsxDEV(Heading, {\n        text: \"Pending Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.lowerChild,\n      children: isLoaded === false ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 43\n      }, this) : pendingProjects.length > 0 ? pendingProjects.map(projects => /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h5\",\n              component: \"h2\",\n              children: projects.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 53\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"body1\",\n              component: \"p\",\n              children: projects.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 53\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"body1\",\n              component: \"p\",\n              children: projects.startDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 53\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"body2\",\n              component: \"p\",\n              children: [\"Status : \", projects.status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 53\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          className: classes.cardAction,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            variant: \"outlined\",\n            color: \"secondary\",\n            onClick: () => {\n              handleClick(projects._id);\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 45\n        }, this)]\n      }, projects.description, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 41\n      }, this)) : /*#__PURE__*/_jsxDEV(Heading, {\n        text: \"No Pending Project in Queue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MediaCard, \"K8YisJrLOvhmyrES1FnkdCHNmaw=\", false, function () {\n  return [useStyles];\n});\n\n_c = MediaCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MediaCard\");","map":{"version":3,"sources":["C:/Users/wt/Desktop/Employee-MS/client/src/Components/Assets/Employee/Project/PendingProject.js"],"names":["React","useEffect","useState","makeStyles","Axios","Card","CardActionArea","CardActions","CardContent","Button","Typography","Snackbar","Alert","Loader","Heading","useStyles","parentDiv","display","flex","width","flexDirection","upperChild","lowerChild","root","margin","height","maxWidth","cardAction","justifyContent","MediaCard","classes","pendingProjects","setPendingProjects","isLoaded","setIsLoaded","isSubmitted","setIsSubmitted","handleSnackbarClose","event","reason","getPendingProjects","get","headers","localStorage","getItem","then","res","console","log","data","catch","error","handleClick","id","post","vertical","horizontal","length","map","projects","description","startDate","status","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Axios from 'axios';\r\nimport {Card,\r\n    CardActionArea, \r\n    CardActions, \r\n    CardContent, \r\n    Button, \r\n    Typography,\r\n    Snackbar\r\n} from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport Loader from '../../Loader';\r\nimport Heading from '../../Heading';\r\n\r\nconst useStyles = makeStyles({\r\n    parentDiv: {\r\n        display: 'flex',\r\n        flex: 1,\r\n        width: '100%',\r\n        flexDirection: 'column',\r\n    },\r\n    upperChild: {\r\n        display: 'flex',\r\n        flex: 0.1,\r\n        width: '100%',\r\n        flexDirection: 'column',\r\n    },\r\n    lowerChild: {\r\n        display: 'flex',\r\n        flex: 0.9,\r\n        width: '100%',\r\n    },\r\n    root: {\r\n        margin: '20px',\r\n        width: 345,\r\n        height: 220,\r\n        maxWidth: 345,\r\n    },\r\n    cardAction: {\r\n        justifyContent: 'flex-end',\r\n    },\r\n});\r\n\r\nexport default function MediaCard() {\r\n    const classes = useStyles();\r\n\r\n    const [pendingProjects, setPendingProjects] = useState([]);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n    const handleSnackbarClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setIsSubmitted(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getPendingProjects();\r\n    }, []);\r\n\r\n    const getPendingProjects = () => {\r\n        Axios.get('http://localhost:5000/employee/viewProjects', {\r\n            headers: {\r\n                'x-access-token': localStorage.getItem('x-access-token')\r\n            }\r\n        })\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                const getPendingProjects = res.data;\r\n                setPendingProjects(getPendingProjects);\r\n                setIsLoaded(true);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const handleClick = (id) => {\r\n        Axios.post(`http://localhost:5000/employee/submitProject/${id}`, null, {\r\n            headers: {\r\n                'x-access-token': localStorage.getItem('x-access-token')\r\n            }\r\n        })\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                setIsSubmitted(true);\r\n                getPendingProjects();\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className={classes.parentDiv}>\r\n            <Snackbar  anchorOrigin={{vertical: 'bottom', horizontal: 'right',}} \r\n                open={isSubmitted} autoHideDuration={3000} onClose={handleSnackbarClose}>\r\n                <Alert onClose={handleSnackbarClose} severity=\"success\">\r\n                    Project Submitted Successfully\r\n                </Alert>\r\n            </Snackbar>\r\n            <div className={classes.upperChild}>\r\n                <Heading text='Pending Projects' />\r\n            </div>\r\n            <div className={classes.lowerChild}>\r\n                {\r\n                    isLoaded === false ? (<Loader />) :\r\n                        (\r\n                            pendingProjects.length > 0 ?\r\n                                (\r\n                                    pendingProjects.map((projects) => (\r\n                                        <Card className={classes.root} key={projects.description}>\r\n                                            <CardActionArea>\r\n                                                <CardContent>\r\n                                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                        {projects.description}\r\n                                                    </Typography>\r\n                                                    <Typography gutterBottom variant=\"body1\" component=\"p\">\r\n                                                        {projects.description}\r\n                                                    </Typography>\r\n                                                    <Typography gutterBottom variant=\"body1\" component=\"p\">\r\n                                                        {projects.startDate}\r\n                                                    </Typography>\r\n                                                    <Typography gutterBottom variant=\"body2\" component=\"p\">\r\n                                                        Status : {projects.status}\r\n                                                    </Typography>\r\n                                                </CardContent>\r\n                                            </CardActionArea>\r\n                                            <CardActions className={classes.cardAction}>\r\n                                                <Button size=\"small\" variant=\"outlined\" color=\"secondary\" onClick={() => { handleClick(projects._id) }}>\r\n                                                    Submit\r\n                                    </Button>\r\n                                            </CardActions>\r\n                                        </Card>\r\n                                    ))\r\n                                ) : (<Heading text=\"No Pending Project in Queue\" />)\r\n                        )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}