{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wt\\\\Desktop\\\\Employee-MS\\\\client\\\\src\\\\Components\\\\Assets\\\\Admin\\\\Project\\\\AddProjectForm.js\",\n    _s = $RefreshSig$();\n\nimport 'date-fns';\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, TextField, Typography, Divider, Button } from '@material-ui/core';\nimport { DialogActions, DialogContent } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing.unit * 2\n  },\n  padding: {\n    padding: theme.spacing.unit\n  },\n  baseColor: {\n    backgroundColor: '#003049'\n  },\n  color: {\n    color: '#003049'\n  }\n}));\nexport default function AddProjectForm(props) {\n  _s();\n\n  const classes = useStyles();\n  const [employeeId, setEmployeeId] = useState(\"\");\n  const [employeeName, setEmployeeName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  useEffect(() => {\n    setEmployeeId(props.employee.id);\n    setEmployeeName(props.employee.name);\n  }, []);\n\n  const handleDescriptionChange = e => {\n    setDescription(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    addProject();\n  };\n\n  const handleClose = () => {\n    props.dialogClose(false);\n  };\n\n  const addProject = () => {\n    const data = {\n      description: description\n    };\n    console.log(data);\n    Axios.post(`http://localhost:5000/admin/addProject/${employeeId}`, data, {\n      headers: {\n        'x-access-token': localStorage.getItem('x-access-token')\n      }\n    }).then(res => {\n      console.log(res);\n      props.dialogClose(false);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.margin,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            className: classes.color,\n            gutterBottom: true,\n            children: \"Assign New Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          style: {\n            marginTop: '20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: true,\n            sm: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Employee Name\",\n              value: employeeName,\n              InputProps: {\n                readOnly: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          style: {\n            marginTop: '30px'\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-multiline-static\",\n            label: \"Description\",\n            multiline: true,\n            rows: 4,\n            value: description,\n            onChange: handleDescriptionChange,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: handleClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"medium\",\n        className: classes.button,\n        startIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 32\n        }, this),\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddProjectForm, \"XFoTgSYWjne+AiCto1Zvx9ePazc=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddProjectForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProjectForm\");","map":{"version":3,"sources":["C:/Users/wt/Desktop/Employee-MS/client/src/Components/Assets/Admin/Project/AddProjectForm.js"],"names":["React","useState","useEffect","makeStyles","Grid","TextField","Typography","Divider","Button","DialogActions","DialogContent","SendIcon","Axios","useStyles","theme","margin","spacing","unit","padding","baseColor","backgroundColor","color","AddProjectForm","props","classes","employeeId","setEmployeeId","employeeName","setEmployeeName","description","setDescription","employee","id","name","handleDescriptionChange","e","target","value","handleSubmit","addProject","handleClose","dialogClose","data","console","log","post","headers","localStorage","getItem","then","res","catch","error","marginTop","readOnly","button"],"mappings":"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","sourcesContent":["import 'date-fns';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Grid,\r\n    TextField,\r\n    Typography,\r\n    Divider,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport { DialogActions, DialogContent } from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: theme.spacing.unit * 2,\r\n    },\r\n    padding: {\r\n        padding: theme.spacing.unit\r\n    },\r\n    baseColor: {\r\n        backgroundColor: '#003049',\r\n    },\r\n    color: {\r\n        color: '#003049',\r\n    },\r\n}));\r\n\r\nexport default function AddProjectForm(props) {\r\n    const classes = useStyles();\r\n\r\n    const [employeeId, setEmployeeId] = useState(\"\");\r\n    const [employeeName, setEmployeeName] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setEmployeeId(props.employee.id);\r\n        setEmployeeName(props.employee.name);\r\n    }, []);\r\n\r\n    const handleDescriptionChange = (e) => {\r\n        setDescription(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        addProject();\r\n    }\r\n\r\n    const handleClose = () => {\r\n        props.dialogClose(false);\r\n    }\r\n\r\n    const addProject = () => {\r\n        const data = {\r\n            description: description,\r\n        }\r\n        console.log(data);\r\n\r\n        Axios.post(`http://localhost:5000/admin/addProject/${employeeId}`, data, {\r\n            headers: {\r\n                'x-access-token': localStorage.getItem('x-access-token')\r\n            }\r\n        })\r\n            .then((res) => {\r\n                console.log(res);\r\n                props.dialogClose(false);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <DialogContent>\r\n                <div className={classes.margin}>\r\n                    <Grid container justify=\"center\">\r\n                        <Typography variant=\"h4\" className={classes.color} gutterBottom>\r\n                            Assign New Project\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Divider />\r\n                    <Grid container spacing={3} style={{ marginTop: '20px' }}>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField\r\n                                label=\"Employee Name\"\r\n                                value={employeeName}\r\n                                InputProps={{\r\n                                    readOnly: true,\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container justify=\"center\" style={{ marginTop: '30px' }}>\r\n                        <TextField\r\n                            id=\"outlined-multiline-static\"\r\n                            label=\"Description\"\r\n                            multiline\r\n                            rows={4}\r\n                            value={description}\r\n                            onChange={handleDescriptionChange}\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button color=\"primary\" onClick={handleClose}>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"medium\"\r\n                    className={classes.button}\r\n                    startIcon={<SendIcon />}\r\n                    onClick={handleSubmit}>\r\n                    Submit\r\n                </Button>\r\n            </DialogActions>\r\n        </React.Fragment>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}